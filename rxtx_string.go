// generated by stringer -type=RxTx,IntfCounterType,IntfLoopbackType; DO NOT EDIT

package vnet

import "fmt"

const _RxTx_name = "RxTxNRxTx"

var _RxTx_index = [...]uint8{0, 2, 4, 9}

func (i RxTx) String() string {
	if i < 0 || i >= RxTx(len(_RxTx_index)-1) {
		return fmt.Sprintf("RxTx(%d)", i)
	}
	return _RxTx_name[_RxTx_index[i]:_RxTx_index[i+1]]
}

const _IntfCounterType_name = "RxPacketsRxBytesTxBytesTxPackets"

var _IntfCounterType_index = [...]uint8{0, 9, 16, 23, 32}

func (i IntfCounterType) String() string {
	i -= 1
	if i < 0 || i >= IntfCounterType(len(_IntfCounterType_index)-1) {
		return fmt.Sprintf("IntfCounterType(%d)", i+1)
	}
	return _IntfCounterType_name[_IntfCounterType_index[i]:_IntfCounterType_index[i+1]]
}

const _IntfLoopbackType_name = "NoneMacPhy"

var _IntfLoopbackType_index = [...]uint8{0, 4, 7, 10}

func (i IntfLoopbackType) String() string {
	i -= 1
	if i < 0 || i >= IntfLoopbackType(len(_IntfLoopbackType_index)-1) {
		return fmt.Sprintf("IntfLoopbackType(%d)", i+1)
	}
	return _IntfLoopbackType_name[_IntfLoopbackType_index[i]:_IntfLoopbackType_index[i+1]]
}
