// autogenerated: do not edit!
// generated from gentemplate [gentemplate -d Package=ip -id multipathAdjacencyVec -d VecType=multipathAdjacencyVec -d Type=multipathAdjacency github.com/platinasystems/elib/vec.tmpl]

package ip

import (
	"github.com/platinasystems/elib"
)

type multipathAdjacencyVec []multipathAdjacency

func (p *multipathAdjacencyVec) Resize(n uint) {
	c := elib.Index(cap(*p))
	l := elib.Index(len(*p)) + elib.Index(n)
	if l > c {
		c = elib.NextResizeCap(l)
		q := make([]multipathAdjacency, l, c)
		copy(q, *p)
		*p = q
	}
	*p = (*p)[:l]
}

func (p *multipathAdjacencyVec) Validate(i uint) *multipathAdjacency {
	c := elib.Index(cap(*p))
	l := elib.Index(i) + 1
	if l > c {
		c = elib.NextResizeCap(l)
		q := make([]multipathAdjacency, l, c)
		copy(q, *p)
		*p = q
	}
	if l > elib.Index(len(*p)) {
		*p = (*p)[:l]
	}
	return &(*p)[i]
}

func (p multipathAdjacencyVec) Len() uint { return uint(len(p)) }
